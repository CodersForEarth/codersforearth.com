# ------------------------------------------------------------------
# In order to expose our K8s microservices to the internet,
# we use Cloudflare Tunnel, and this cloudflared.yaml is how
# we deploy Cloudflare Tunnel inside our cluseter and therefore
# expose Nsustain.com
#
# This file is taken from Cloudflare Examples official repository.
# Source:
#   https://github.com/cloudflare/argo-tunnel-examples/tree/master/named-tunnel-k8s
# ------------------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
spec:
  selector:
    matchLabels:
      app: cloudflared
  replicas: 2
  template:
    metadata:
      labels:
        app: cloudflared
    spec:
      containers:
      - name: cloudflared
        image: cloudflare/cloudflared:latest
        args:
        - tunnel
        # Points cloudflared to the config file, which configures what cloudflared
        # will actually do. This file is created by a ConfigMap below.
        - --config
        - /etc/cloudflared/config/config.yaml
        - run
        livenessProbe:
          httpGet:
            # Cloudflared has a /ready endpoint which returns 200 if and only if
            # it has an active connection to the edge.
            path: /ready
            port: 2000
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
        volumeMounts:
        - name: config
          mountPath: /etc/cloudflared/config
          readOnly: true
        # Each tunnel has an associated "credentials file" which authorizes machines
        # to run the tunnel. cloudflared will read this file from its local filesystem,
        # and it'll be stored in a k8s secret.
        - name: creds
          mountPath: /etc/cloudflared/creds
          readOnly: true
      volumes:
      - name: creds
        secret:
          secretName: tunnel-credentials
      # Create a config.yaml file from the ConfigMap below.
      - name: config
        configMap:
          name: cloudflared
          items:
          - key: config.yaml
            path: config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudflared
data:
  config.yaml: |
    # CHANGE TO YOUR TUNNEL NAME.
    # Other than the tunnel name and the ingress rules at the bottom,
    # you don't have to change any other config.
    tunnel: nsustain

    # Serves the metrics server under /metrics and the readiness server under /ready
    metrics: 0.0.0.0:2000
    credentials-file: /etc/cloudflared/creds/credentials.json
    
    # Autoupdates applied in a k8s pod will be lost when the pod is removed or restarted, so
    # autoupdate doesn't make sense in Kubernetes. However, outside of Kubernetes, we strongly
    # recommend using autoupdate.
    no-autoupdate: false

    # Cloudflare Tunnel ingress rules
    # Source:
    #   https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/tunnel-guide/local/local-management/ingress/
    ingress:
    - hostname: nsustain.com
      service: http://flarum:80

    # Uncomment to enable Cloudflare Tunnel's debugging feature.
    # If you enable this, http://test.nsustain.com will direct
    # you to Cloudflare Tunnel's built-in hello-world image.
    # We can, for example, use this feature for testing if our K8s
    # is connected to Cloudflare Tunnel or not.
    #- hostname: test.nsustain.com
    #  service: hello_world

    # Reply 404 to hostnames that don't match with any of the above
    - service: http_status:404
