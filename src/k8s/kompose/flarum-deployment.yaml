apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: flarum
  name: flarum
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: flarum
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/back-end: "true"
        io.kompose.service: flarum
    spec:
      containers:
        - env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  key: DB_HOST
                  name: envflarum
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: DB_NAME
                  name: envflarum
            - name: DB_PASS
              valueFrom:
                configMapKeyRef:
                  key: DB_PASS
                  name: envflarum
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  key: DB_PORT
                  name: envflarum
            - name: DB_PREF
              valueFrom:
                configMapKeyRef:
                  key: DB_PREF
                  name: envflarum
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  key: DB_USER
                  name: envflarum
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  key: DEBUG
                  name: envflarum
            - name: FLARUM_ADMIN_MAIL
              valueFrom:
                configMapKeyRef:
                  key: FLARUM_ADMIN_MAIL
                  name: envflarum
            - name: FLARUM_ADMIN_PASS
              valueFrom:
                configMapKeyRef:
                  key: FLARUM_ADMIN_PASS
                  name: envflarum
            - name: FLARUM_ADMIN_USER
              valueFrom:
                configMapKeyRef:
                  key: FLARUM_ADMIN_USER
                  name: envflarum
            - name: FLARUM_DESCRIPTION
              valueFrom:
                configMapKeyRef:
                  key: FLARUM_DESCRIPTION
                  name: envflarum
            - name: FLARUM_TITLE
              valueFrom:
                configMapKeyRef:
                  key: FLARUM_TITLE
                  name: envflarum
            - name: FLARUM_WELCOME_MESSAGE
              valueFrom:
                configMapKeyRef:
                  key: FLARUM_WELCOME_MESSAGE
                  name: envflarum
            - name: FLARUM_WELCOME_TITLE
              valueFrom:
                configMapKeyRef:
                  key: FLARUM_WELCOME_TITLE
                  name: envflarum
            - name: FORUM_URL
              valueFrom:
                configMapKeyRef:
                  key: FORUM_URL
                  name: envflarum
            - name: FORUM_URL_BASE
              valueFrom:
                configMapKeyRef:
                  key: FORUM_URL_BASE
                  name: envflarum
          image: nsustain/flarum:latest
          name: flarum
          ports:
            - containerPort: 80
            - containerPort: 443
            - containerPort: 9000
          resources: {}
          volumeMounts:
            - mountPath: /var/www/html/flarum
              name: flarum-data
            - mountPath: /etc/nginx
              name: nginx-conf
            - mountPath: /etc/letsencrypt
              name: letsencrypt-data
            - mountPath: /var/lib/letsencrypt
              name: letsencrypt-lockfiles
      restartPolicy: Always
      terminationGracePeriodSeconds: 0
      volumes:
        - name: flarum-data
          persistentVolumeClaim:
            claimName: flarum-data
        - name: nginx-conf
          persistentVolumeClaim:
            claimName: nginx-conf
        - name: letsencrypt-data
          persistentVolumeClaim:
            claimName: letsencrypt-data
        - name: letsencrypt-lockfiles
          persistentVolumeClaim:
            claimName: letsencrypt-lockfiles
status: {}
