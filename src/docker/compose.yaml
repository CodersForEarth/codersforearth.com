# ----------------------------------------------------------------
# WHAT IS THIS FILE FOR?
# Using docker compose is one of two ways we deploy Nsustain.com
# If you're running it on one host, use docker compose.
# If you're running it on two or more hosts for high availability,
# use kubernetes.
# ----------------------------------------------------------------

# -----------------------------------------------------------------
# HOW TO USE DOCKER COMPOSE
#   # To start
#   cd nsustain.com/src/docker
#   docker compose up
#
#   # To stop
#   <Ctrl + c>
#   docker compose down
#
#   # To reset all data and start again
#   docker compose down
#   alias dockervrm="docker volume ls -q | xargs docker volume rm"
#   dockervrm
#   docker compose up
#
# Now, docker compose is up and running based on this file.
# Go to http://127.0.0.1 to access it.
#
# Plus, we included default env varialbes inside "Dockerfile" in the
# same directory you're currently in, such that you're able to
# run this server for development right away wiht
# "docker compose up -d" without any extra configuration.
#
# What this means is that the default admin username, password,
# as well as mariadb credentials are set as what's inside
# "Dockerfile" -- e.g. ENV FLARUM_ADMIN_USER=...
#
# There's no problem running as is with these default environment
# variables for development purposes. For production, however,
# you should override these env variables with your own env
# variables.
# -----------------------------------------------------------------

# -----------------------------------------------------------------
# HOW TO OVERRIDE THE ENV VARIABLES WITH YOUR OWN
#   cd nsustain.com/src/docker
#   cp exampleenvflarum .envflarum
#   cp exampleenvmariadb .envmariadb
#   <On this file, uncomment "env_file: - .envflarum">
#   <On this file, uncomment "env_file: - .envmariadb">
#
# Now, every env varialble you write on .envflarum and .envmariadb
# will be used inside your server when you "docker compose up -d"
# To deter brute-force attacks, we recommend you to set every
# password with lengthy, non-dictionary words.
# -----------------------------------------------------------------

# -----------------------------------------------------------------
# HOW TO DEBUG
#   # Start a shell inside the flarum container
#   docker compose exec -it flarum sh
#
#   # Connect to the databse
#   docker compose exec -it flarum sh
#   mariadb -h $DB_HOST -u $DB_USER -p$DB_PASS
#
#   # Start a shell inside the mariadb container
#   docker compose exec -it maraidb sh
#
#   # Check if correct environment variables were injected
#   env
# -----------------------------------------------------------------
services:
  flarum:
    image: nsustain/flarum:latest
    build:
      context: ./
      dockerfile: ./flarum.Dockerfile
    container_name: flarum
    # Always restart the container, even after rebooting the host
    restart: always
    # Since this container doesn't accept SIGTERM, we use
    # stop_grace_period: 1s to send SIGKILL after 1s
    stop_grace_period: 1s
    depends_on:
      - mariadb
    ports:
      - 80:80
      - 443:443
    expose:
      - 9000
    networks:
      - back-end
    volumes:
      # Most of our config files are added inside the container
      # directly at Dockerfile, but these files are mounted here
      # because these configs tend to require changes
      # when we develop.
      - ./composer.json:/var/www/html/flarum/composer.json:rw
      - ./composer.lock:/var/www/html/flarum/composer.lock:rw

      # These are the data files for the container.
      # Location of these files:
      #   /var/lib/docker/volumes/...
      - flarum-assets:/var/www/html/flarum/public/assets
      - flarum-storage:/var/www/html/flarum/storage
      - flarum-vendor:/var/www/html/flarum/vendor

      # When you first run our image, these volumes will
      # be empty. Howver, if you'd like to set up https / SSL,
      # these volumes will be used for storing the certificates.
      - /etc/letsencrypt:/etc/letsencrypt

      # certbot uses lock-files system for its internal functions.
      # Source:
      #   https://eff-certbot.readthedocs.io/en/stable/using.html#where-certs
      - /var/lib/letsencrypt:/var/lib/letsencrypt

    # Uncomment to override default env variables with your own.
    # This is not required in development environments, but
    # in production environments, this is recommeneded.
    #env_file:
    #  - .envflarum

  mariadb:
    image: nsustain/mariadb:latest
    build:
      context: ./
      dockerfile: ./mariadb.Dockerfile
    container_name: mariadb
    restart: always
    expose:
      - 3306
    networks:
      - back-end
    volumes:
      - mariadb-data:/var/lib/mysql
    # Uncomment to override default env variables with your own
    #env_file:
    #  - .envmariadb

volumes:
  flarum-assets:
  flarum-storage:
  flarum-vendor:
  mariadb-data:

# "The presence of these objects is sufficient to define them"
# Source:
#   https://docs.docker.com/compose/compose-file/
networks:
  back-end: {}
